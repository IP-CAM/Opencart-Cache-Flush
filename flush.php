<?php /* */ require_once('config.php');final class Cache {	private $connection = false;	public function __construct($expire = 0) {		if (extension_loaded('apc')) {			if (substr(php_sapi_name(), 0, 3) == 'cgi') echo '<br> - APC Cache: ERROR! your server is loading PHP as CGI, APC cache won\'t work properly! <br>';			else echo '<br> - APC Cache: YES ! <br>';		} else echo '<br> - APC Cache: NO ! <br>';		if (extension_loaded('Memcache')) {			try {				echo '<br> - Memcache: YES ! <br>';				$connection = new Memcache;				$connection->addServer(MEMCACHE_HOSTNAME, MEMCACHE_PORT);				//failsafe caching:				$stats = @$connection->getExtendedStats();				$available = (bool) $stats[MEMCACHE_HOSTNAME . ':' . MEMCACHE_PORT];				if ($available && $connection->pconnect(MEMCACHE_HOSTNAME, MEMCACHE_PORT)) $this->connection = $connection;				//if ($connection->pconnect(MEMCACHE_HOSTNAME, MEMCACHE_PORT) != 0) $this->connection = $connection;				else {					echo '<br>ERROR: Could not connect to Memcache! Host: ' . MEMCACHE_HOSTNAME . ' Port: ' . MEMCACHE_PORT . '<br>';				}							} catch (Exception $e) {				$this->connection = false;				echo 'ERROR: Could not connect to Memcache! Host: ' . MEMCACHE_HOSTNAME . ' Port: ' . MEMCACHE_PORT . '<br>';			}		} else echo '<br> - Memcache: NO ! <br>';		if (is_writable(DIR_CACHE)) echo '<br> - File Cache: YES ! <br>';		else echo '<br> - File Cache: NO ! (check file permissions)<br>';	}	public function flush() {		$result=false;		if (extension_loaded('apc')) {			$result=apc_clear_cache() && apc_clear_cache('user');			if ($result==true) echo "<br>Clean APC Cache: SUCCESS !<br>";			else echo "<br>Clean APC Cache: ERROR !<br>";		}		if ($this->connection) {			if ($this->connection->flush()) {			echo "<br>Clean Memcache: SUCCESS !<br>";			$result=true;			}		}		if ($result==false) echo "<br>ATTENTION: No memory cache flushed!<br>";		return $result;		}	public function flush_dir($dir=DIR_CACHE){		return $this->del_dir($dir); 	}		private function del_dir($dir,$delete_empty=false) {		$count=0;		if(substr($dir,-1) == "/") { 			$dir = substr($dir,0,-1); 		}		if(!file_exists($dir) || !is_dir($dir)) { 			return 0; 		} elseif(!is_readable($dir)) { 			return 0; 		} else { 			$dirHandle = opendir($dir);							while ($contents = readdir($dirHandle)) { 				if($contents != '.' && $contents != '..') { 					$path = $dir . "/" . $contents; 										if(is_dir($path)) { 						$count+=$this->del_dir($path,true); 					} else { 						unlink($path);						$count++;					} 				} 			}					closedir($dirHandle);			if($delete_empty && count(scandir($dir)) == 2) { //check if it's empty.				if(!rmdir($dir)) { 					return 0; 				} else $count++;			}			return $count;		}	}}echo "<br><br> Available Cache Alternatives in this server: <br>";$cache = new Cache();echo "<br>------------------------------------------------------------<br>";//print available disk space:$base = 1024;$si_prefix = array( 'B', 'KB', 'MB', 'GB', 'TB', 'EB', 'ZB', 'YB' );$dir = DIR_CACHE;$available = disk_free_space($dir);$classA = min((int)log($available , $base) , count($si_prefix) - 1);echo sprintf('Available Disk Space: %1.2f' , $available / pow($base,$classA)) . ' ' . $si_prefix[$classA] . ' (' . $dir . ')<br>';$dir = sys_get_temp_dir();$available = disk_free_space($dir);$classA = min((int)log($available , $base) , count($si_prefix) - 1);echo sprintf('Available Disk Space: %1.2f' , $available / pow($base,$classA)) . ' ' . $si_prefix[$classA] . ' (' . $dir . ')<br>';$total = disk_total_space($dir);$classT = min((int)log($total , $base) , count($si_prefix) - 1);echo sprintf('<br>Total Disk Space: %1.2f' , $total / pow($base,$classT)) . ' ' . $si_prefix[$classT] . ' (' . $dir . ')<br>';echo "<br>------------------------------------------------------------<br>";$cache->flush();echo "<br>------------------------------------------------------------<br>";$i=$cache->flush_dir();if($i!=0) echo "<br>Clean File Cache: Success!  " . $i . " files removed from '" . DIR_CACHE . "' folder.<br>";else echo "<br>Clean File Cache: ERROR ! - No files where found in '" . DIR_CACHE . "' folder.<br>";echo "<br>------------------------------------------------------------<br>";$image_cache_folder = substr(__FILE__, 0, -10) . "image/cache/";$p=$cache->flush_dir($image_cache_folder);if($p!=0) echo "<br>Clean Image Cache: Success!  " . $i . " files removed from '" . $image_cache_folder . "' folder.<br>";else echo "<br>Clean Image Cache: ERROR ! - No files where found in '" . $image_cache_folder . "' folder.<br>";echo "<br>------------------------------------------------------------<br>";$dir= substr(__FILE__, 0, -10) . "/pagecache/cachefiles/";if(is_dir($dir)) {	$i=$cache->flush_dir($dir);	if($i!=0) echo "<br>Clean 'Jay' PageCache: Success!  " . $i . " files removed from '" . $dir . "' folder.<br>";	else echo "<br>Clean 'Jay' PageCache: ERROR ! - No files where found in '" . $dir . "' folder.<br>";	echo "<br>------------------------------------------------------------<br>";}$i=$cache->flush_dir('./vqmod/vqcache/') + $cache->flush_dir('./vqmod/logs/');if($i!=0) echo "<br>Clean VQmod Cache: SUCCESS! - " . $i . " files removed from ./vqmod/vqcache/ and ./vqmod/log/ folder. <br>";else echo "<br>Clean VQmod Cache: ERROR ! - No files where found in ./vqmod/vqcache/ nor ./vqmod/log/ folder.<br>";//check for write permissionsecho "<br>------------------------------------------------------------<br>";//echo "<br> Checking File Write Permissions<br>";if (!is_writable(DIR_CACHE)) {	echo '<br>Warning: Cache directory needs to be writable for OpenCart to work!';}if (!is_writable(DIR_SYSTEM . 'logs')) {	echo '<br>Warning: Logs directory needs to be writable for OpenCart to work!';}if (!is_writable( './image')) {	echo '<br>Warning: Image directory needs to be writable for OpenCart to work!';}if (!is_writable( './image/cache')) {	echo '<br>Warning: Image cache directory needs to be writable for OpenCart to work!';}if (!is_writable( './image/data')) {	echo '<br>Warning: Image data directory needs to be writable for OpenCart to work!';}if (!is_writable( './download')) {	echo '<br>Warning: Download directory needs to be writable for OpenCart to work!';}/* */?>